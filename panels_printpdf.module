<?php

/**
 * Implementation of hook_ctools_plugin_api().
 *
 * @param $module
 * @param $api
 *
 * @return array
 */
function panels_printpdf_ctools_plugin_api( $module, $api ) {
  if ($module == 'panels' && $api == 'pipelines') {
    return array(
      'version' => 1,
      'path' => drupal_get_path('module', 'panels_printpdf') . '/plugins',
    );
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * @param $module
 * @param $plugin
 *
 * @return string
 */
function panels_printpdf_ctools_plugin_directory($module, $plugin) {
  if ($module == 'page_manager' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_default_panels_renderer_pipeline().
 */
function panels_printpdf_default_panels_renderer_pipeline() {
  $pipelines = array();

  $pipeline = new stdClass;
  $pipeline->disabled = FALSE; /* Edit this to true to make a default pipeline disabled initially */
  $pipeline->api_version = 1;
  $pipeline->name = 'printpdf';
  $pipeline->admin_title = t('Print PDF');
  $pipeline->admin_description = t('Renders a panel as a PDF. Requires print_pdf module.');
  $pipeline->weight = 0;
  $pipeline->settings = array(
    'renderers' => array(
      0 => array(
        'access' => array(),
        'renderer' => 'printpdf',
        // default values for renderer options
        'options' => array(
          'pdf_paper_size' => NULL,
          'pdf_page_orientation' => NULL,
          'pdf_filename' => 'filename.pdf',
        ),
      ),
    ),
  );
  $pipelines[$pipeline->name] = $pipeline;

  return $pipelines;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function panels_printpdf_form_panels_panel_context_edit_settings_alter(&$form, &$form_state, $form_id) {
  // get default values from handler's stored conf array
  $conf = $form_state['handler']->conf;

  $paper_size = !empty( $conf['pdf_paper_size'] ) ? $conf['pdf_paper_size'] : variable_get('print_pdf_paper_size', PRINT_PDF_PAPER_SIZE_DEFAULT);
  $page_orientation = !empty( $conf['pdf_page_orientation'] ) ? $conf['pdf_page_orientation'] : variable_get('print_pdf_page_orientation', PRINT_PDF_PAGE_ORIENTATION_DEFAULT);
  $filename = !empty( $conf['pdf_filename'] ) ? $conf['pdf_filename'] : 'filename.pdf';

  $form['conf']['pipeline']['pdf_paper_size'] = array(
    '#type' => 'select',
    '#title' => t('PDF Paper size'),
    '#description' => t('Choose the paper size of the generated PDF.'),
    '#weight' => 100,
    '#options' => _print_pdf_paper_sizes(),
    '#default_value' => $paper_size,
  );

  $form['conf']['pipeline']['pdf_page_orientation'] = array(
    '#type' => 'select',
    '#title' => t('PDF Page orientation'),
    '#description' => t('Choose the page orientation of the generated PDF.'),
    '#weight' => 100,
    '#options' => array('portrait' => t('Portrait'), 'landscape' => t('Landscape')),
    '#default_value' => $page_orientation,
  );

  $form['conf']['pipeline']['pdf_filename'] = array(
    '#type' => 'textfield',
    '#title' => t('PDF Filename'),
    '#description' => t('Name of the file this PDF will generate. Accepts context substitutions.'),
    '#weight' => 100,
    '#default_value' => $filename,
  );

  $form['#submit'][] = 'panels_printpdf_form_panels_panel_context_edit_settings_submit';
}

/**
 * Implements form submit callback
 *
 * @param $form
 * @param $form_state
 */
function panels_printpdf_form_panels_panel_context_edit_settings_submit(&$form, &$form_state) {
  $form_state['handler']->conf['pdf_paper_size'] = $form_state['values']['pdf_paper_size'];
  $form_state['handler']->conf['pdf_page_orientation'] = $form_state['values']['pdf_page_orientation'];
  $form_state['handler']->conf['pdf_filename'] = $form_state['values']['pdf_filename'];
}
